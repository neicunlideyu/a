package com.onboard.plugin.git.mapper;

import com.onboard.domain.mapper.common.BaseCriteria;
import com.onboard.domain.mapper.common.BaseExample;
import java.util.ArrayList;
import java.util.List;

public class RepositoryPrivilegeUserExample implements BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected int start = 0;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected int limit = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public RepositoryPrivilegeUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public List<BaseCriteria> getOredBaseCriteria() {
        List<com.onboard.domain.mapper.common.BaseCriteria> list = new ArrayList<com.onboard.domain.mapper.common.BaseCriteria>();
        list.addAll(oredCriteria);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void setStart(int start) {
        this.start=start;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public int getStart() {
        return start;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void setLimit(int limit) {
        this.limit=limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public int getLimit() {
        return limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public void setLimit(int start, int limit) {
        this.start = start;
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    public RepositoryPrivilegeUserExample(RepositoryPrivilegeUserObject sample) {
        oredCriteria = new ArrayList<Criteria>();
        Criteria criteria = this.or();
        if (sample.getUserId() != null) {
            criteria.andUserIdEqualTo(sample.getUserId());
        }
        if (sample.getRepositoryRrivilegeId() != null) {
            criteria.andRepositoryRrivilegeIdEqualTo(sample.getRepositoryRrivilegeId());
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repository_privilege_user
     *
     * @mbggenerated Thu Dec 05 14:52:11 CST 2013
     */
    protected abstract static class GeneratedCriteria extends BaseCriteria {

        protected GeneratedCriteria() {
            super();
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdIsNull() {
            addCriterion("repositoryRrivilegeId is null");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdIsNotNull() {
            addCriterion("repositoryRrivilegeId is not null");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdEqualTo(Integer value) {
            addCriterion("repositoryRrivilegeId =", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdNotEqualTo(Integer value) {
            addCriterion("repositoryRrivilegeId <>", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdGreaterThan(Integer value) {
            addCriterion("repositoryRrivilegeId >", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("repositoryRrivilegeId >=", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdLessThan(Integer value) {
            addCriterion("repositoryRrivilegeId <", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdLessThanOrEqualTo(Integer value) {
            addCriterion("repositoryRrivilegeId <=", value, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdIn(List<Integer> values) {
            addCriterion("repositoryRrivilegeId in", values, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdNotIn(List<Integer> values) {
            addCriterion("repositoryRrivilegeId not in", values, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdBetween(Integer value1, Integer value2) {
            addCriterion("repositoryRrivilegeId between", value1, value2, "repositoryRrivilegeId");
            return (Criteria) this;
        }

        public Criteria andRepositoryRrivilegeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("repositoryRrivilegeId not between", value1, value2, "repositoryRrivilegeId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repository_privilege_user
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 05 14:52:11 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}